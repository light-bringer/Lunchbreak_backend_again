# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-05-01 23:46
from __future__ import unicode_literals

import Lunchbreak.mixins
import business.mixins
import dirtyfields.dirtyfields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_gocardless', '0001_initial'),
        ('payconiq', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password_reset', models.CharField(blank=True, help_text='Code gebruikt om het wachtwoord te veranderen.', max_length=64, verbose_name='wachtwoord reset')),
                ('password', models.CharField(help_text='Geëncrypteerd wachtwoord.', max_length=191, verbose_name='wachtwoord')),
                ('name', models.CharField(help_text='Naam.', max_length=191, verbose_name='naam')),
                ('owner', models.BooleanField(default=False, help_text='Of deze werknemer een eigenaar is.', verbose_name='eigenaar')),
            ],
            options={
                'verbose_name_plural': 'werknemers',
                'verbose_name': 'werknemer',
            },
            bases=(models.Model, business.mixins.NotifyModelMixin),
        ),
        migrations.CreateModel(
            name='EmployeeToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.IntegerField(choices=[(0, 'GCM'), (1, 'APNS'), (2, 'Inactive')], default=2, verbose_name='Notification service')),
                ('registration_id', models.TextField(blank=True, verbose_name='Registration ID')),
                ('device', models.CharField(help_text='Naam van het apparaat.', max_length=191, verbose_name='apparaat')),
                ('identifier', models.CharField(help_text='Idenfitifcatie code die toegang geeft to Lunchbreak.', max_length=191, verbose_name='idenfitifcatie')),
            ],
            options={
                'verbose_name_plural': 'werknemerstokens',
                'verbose_name': 'werknemerstoken',
            },
            bases=(Lunchbreak.mixins.CleanModelMixin, models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password_reset', models.CharField(blank=True, help_text='Code gebruikt om het wachtwoord te veranderen.', max_length=64, verbose_name='wachtwoord reset')),
                ('password', models.CharField(help_text='Geëncrypteerd wachtwoord.', max_length=191, verbose_name='wachtwoord')),
                ('email', models.EmailField(help_text='E-mailadres.', max_length=254, unique=True, verbose_name='e-mailadres')),
                ('first_name', models.CharField(help_text='Voornaam.', max_length=191, verbose_name='voornaam')),
                ('last_name', models.CharField(help_text='Familienaam.', max_length=191, verbose_name='familienaam')),
                ('gocardless', models.OneToOneField(blank=True, help_text='GoCardless account.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='django_gocardless.Merchant', verbose_name='GoCardless account')),
                ('payconiq', models.OneToOneField(blank=True, help_text='Payconiq account.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='payconiq.Merchant', verbose_name='Payconiq account')),
            ],
            options={
                'verbose_name_plural': 'Personeel',
                'verbose_name': 'Personeel',
            },
            bases=(models.Model, business.mixins.NotifyModelMixin),
        ),
        migrations.CreateModel(
            name='StaffToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.IntegerField(choices=[(0, 'GCM'), (1, 'APNS'), (2, 'Inactive')], default=2, verbose_name='Notification service')),
                ('registration_id', models.TextField(blank=True, verbose_name='Registration ID')),
                ('device', models.CharField(help_text='Naam van het apparaat.', max_length=191, verbose_name='apparaat')),
                ('identifier', models.CharField(help_text='Idenfitifcatie code die toegang geeft to Lunchbreak.', max_length=191, verbose_name='idenfitifcatie')),
                ('staff', models.ForeignKey(help_text='Personeel.', on_delete=django.db.models.deletion.CASCADE, related_name='tokens', to='business.Staff', verbose_name='personeel')),
            ],
            options={
                'verbose_name_plural': 'personeelstokens',
                'verbose_name': 'personeelstoken',
            },
            bases=(Lunchbreak.mixins.CleanModelMixin, models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
    ]
