# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-14 17:26
from __future__ import unicode_literals

import datetime
import dirtyfields.dirtyfields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import private_media.storages


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeliveryPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.PositiveSmallIntegerField(choices=[(1, 'Maandag'), (2, 'Dinsdag'), (3, 'Woensdag'), (4, 'Donderdag'), (5, 'Vrijdag'), (6, 'Zaterdag'), (7, 'Zondag')])),
                ('time', models.TimeField()),
                ('duration', models.DurationField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('amount', models.DecimalField(decimal_places=3, default=1, max_digits=7)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=7)),
                ('preorder_days', models.PositiveIntegerField(default=0)),
                ('commentable', models.BooleanField(default=False)),
                ('priority', models.BigIntegerField(default=0)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Food',
            },
        ),
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('priority', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Food categories',
            },
        ),
        migrations.CreateModel(
            name='FoodType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('quantifier', models.CharField(blank=True, max_length=255, null=True)),
                ('inputtype', models.PositiveIntegerField(choices=[(0, 'Aantal'), (1, 'Aanpasbaar o.b.v. SI-eenheid'), (2, 'Vaste hoeveelheid o.b.v. SI-eenheid')], default=0)),
                ('customisable', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='HolidayPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('closed', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='IngredientGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('maximum', models.PositiveIntegerField(default=0, verbose_name='Maximum amount')),
                ('minimum', models.PositiveIntegerField(default=0, verbose_name='Minimum amount')),
                ('priority', models.PositiveIntegerField(default=0)),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('calculation', models.PositiveIntegerField(choices=[(0, 'Altijd de groepsprijs'), (1, 'Duurder bij toevoegen, zelfde bij aftrekken'), (2, 'Duurder bij toevoegen, goedkoper bij aftrekken')], default=0)),
                ('foodtype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lunch.FoodType')),
            ],
        ),
        migrations.CreateModel(
            name='IngredientRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected', models.BooleanField(default=False)),
                ('typical', models.BooleanField(default=False)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lunch.Food')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lunch.Ingredient')),
            ],
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='OpeningPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.PositiveSmallIntegerField(choices=[(1, 'Maandag'), (2, 'Dinsdag'), (3, 'Woensdag'), (4, 'Donderdag'), (5, 'Vrijdag'), (6, 'Zaterdag'), (7, 'Zondag')])),
                ('time', models.TimeField()),
                ('duration', models.DurationField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Quantity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min', models.DecimalField(decimal_places=3, default=1, max_digits=7)),
                ('max', models.DecimalField(decimal_places=3, default=10, max_digits=7)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('foodtype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lunch.FoodType')),
            ],
            options={
                'verbose_name_plural': 'Quantities',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('country', models.PositiveSmallIntegerField(choices=[(0, 'Belgium'), (1, 'The Netherlands'), (2, 'Luxemburg'), (3, 'France'), (4, 'Germany')])),
                ('postcode', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=255)),
                ('province', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('postcode', models.CharField(max_length=20, verbose_name='Postal code')),
                ('street', models.CharField(max_length=255)),
                ('number', models.CharField(max_length=10)),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('name', models.CharField(max_length=255)),
                ('wait', models.DurationField(default=datetime.timedelta(0, 60))),
                ('preorder_time', models.TimeField(default=datetime.time(12, 0))),
                ('seats_max', models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1)])),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('enabled', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='StoreCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('icon', models.PositiveIntegerField(choices=[(0, 'Onbekend'), (100, 'Slager'), (101, 'Bakker'), (102, 'Broodjeszaak'), (200, 'Tomaten'), (300, 'Broodje')], default=0)),
            ],
            options={
                'verbose_name_plural': 'Store categories',
            },
        ),
        migrations.CreateModel(
            name='StoreHeader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original', models.ImageField(storage=private_media.storages.PrivateMediaStorage(), upload_to='storeheader')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='store',
            name='categories',
            field=models.ManyToManyField(to='lunch.StoreCategory'),
        ),
        migrations.AddField(
            model_name='store',
            name='header',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lunch.StoreHeader'),
        ),
        migrations.AddField(
            model_name='store',
            name='hearts',
            field=models.ManyToManyField(blank=True, through='customers.Heart', to='customers.User'),
        ),
        migrations.AddField(
            model_name='store',
            name='regions',
            field=models.ManyToManyField(help_text='Active delivery regions.', to='lunch.Region'),
        ),
        migrations.AlterUniqueTogether(
            name='region',
            unique_together=set([('country', 'postcode')]),
        ),
        migrations.AddField(
            model_name='quantity',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lunch.Store'),
        ),
        migrations.AddField(
            model_name='openingperiod',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lunch.Store'),
        ),
        migrations.AddField(
            model_name='ingredientgroup',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lunch.Store'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lunch.IngredientGroup'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lunch.Store'),
        ),
        migrations.AddField(
            model_name='holidayperiod',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lunch.Store'),
        ),
        migrations.AddField(
            model_name='foodcategory',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lunch.Store'),
        ),
        migrations.AddField(
            model_name='food',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lunch.FoodCategory'),
        ),
        migrations.AddField(
            model_name='food',
            name='foodtype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lunch.FoodType'),
        ),
        migrations.AddField(
            model_name='food',
            name='ingredientgroups',
            field=models.ManyToManyField(blank=True, to='lunch.IngredientGroup'),
        ),
        migrations.AddField(
            model_name='food',
            name='ingredients',
            field=models.ManyToManyField(blank=True, through='lunch.IngredientRelation', to='lunch.Ingredient'),
        ),
        migrations.AddField(
            model_name='food',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lunch.Store'),
        ),
        migrations.AddField(
            model_name='deliveryperiod',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lunch.Store'),
        ),
        migrations.AlterUniqueTogether(
            name='quantity',
            unique_together=set([('foodtype', 'store')]),
        ),
        migrations.AlterUniqueTogether(
            name='ingredientrelation',
            unique_together=set([('food', 'ingredient')]),
        ),
        migrations.AlterUniqueTogether(
            name='foodcategory',
            unique_together=set([('name', 'store')]),
        ),
    ]
