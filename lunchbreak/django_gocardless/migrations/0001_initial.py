# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-06-21 19:26
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django_gocardless.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.CharField(max_length=191, primary_key=True, serialize=False)),
                ('address_line1', models.CharField(blank=True, max_length=191)),
                ('address_line2', models.CharField(blank=True, max_length=191)),
                ('address_line3', models.CharField(blank=True, max_length=191)),
                ('city', models.CharField(blank=True, max_length=191)),
                ('company_name', models.CharField(blank=True, help_text='Required unless family_name and given_name are provided.', max_length=191)),
                ('country_code', models.CharField(blank=True, max_length=2)),
                ('created_at', models.DateTimeField(null=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('family_name', models.CharField(blank=True, max_length=191)),
                ('first_name', models.CharField(blank=True, max_length=191)),
                ('language', models.CharField(blank=True, max_length=2)),
                ('postal_code', models.CharField(blank=True, max_length=191)),
                ('region', models.CharField(blank=True, max_length=191)),
                ('swedish_identity_number', models.CharField(blank=True, max_length=191)),
            ],
            bases=(models.Model, django_gocardless.mixins.GCCacheMixin),
        ),
        migrations.CreateModel(
            name='CustomerBankAccount',
            fields=[
                ('id', models.CharField(max_length=191, primary_key=True, serialize=False)),
                ('account_holder_name', models.CharField(max_length=18)),
                ('account_number_ending', models.CharField(max_length=2)),
                ('bank_name', models.CharField(max_length=191)),
                ('country_code', models.CharField(max_length=2)),
                ('created_at', models.DateTimeField(null=True)),
                ('currency', models.CharField(choices=[('EUR', 'Euro'), ('GBP', 'British Pound'), ('SEK', 'Swedish Krona')], max_length=3)),
                ('enabled', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_gocardless.Customer')),
            ],
            bases=(models.Model, django_gocardless.mixins.GCCacheMixin),
        ),
        migrations.CreateModel(
            name='Mandate',
            fields=[
                ('id', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(null=True)),
                ('next_possible_charge_date', models.DateField(null=True)),
                ('reference', models.CharField(blank=True, max_length=191)),
                ('scheme', models.CharField(blank=True, choices=[('autogiro', 'Autogiro'), ('bacs', 'Bacs'), ('sepa_core', 'Sepa Core'), ('sepa_cor1', 'Sepa Cor1')], max_length=191)),
                ('status', models.CharField(choices=[('pending_submission', 'Pending submission'), ('submitted', 'Submitted'), ('active', 'Active'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='pending_submission', max_length=191)),
                ('customer_bank_account', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_gocardless.CustomerBankAccount')),
            ],
            bases=(models.Model, django_gocardless.mixins.GCCacheMixin),
        ),
        migrations.CreateModel(
            name='Merchant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(blank=True, max_length=191)),
                ('organisation_id', models.CharField(blank=True, max_length=191)),
                ('state', models.CharField(blank=True, help_text='CSRF Token', max_length=56)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.CharField(max_length=191, primary_key=True, serialize=False)),
                ('amount', models.PositiveIntegerField()),
                ('amount_refunded', models.PositiveIntegerField()),
                ('charge_date', models.DateField(null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('currency', models.CharField(choices=[('EUR', 'Euro'), ('GBP', 'British Pound'), ('SEK', 'Swedish Krona')], max_length=3)),
                ('description', models.TextField(blank=True)),
                ('reference', models.CharField(blank=True, max_length=140)),
                ('status', models.CharField(choices=[('pending_submission', 'Pending submission'), ('submitted', 'Submitted'), ('confirmed', 'Confirmed'), ('failed', 'Failed'), ('charged_back', 'Charged back'), ('paid_out', 'Paid out'), ('cancelled', 'Cancelled'), ('pending_customer_approval', 'Pending customer approval'), ('customer_approval_denied', 'Customer approval denied')], default='pending_submission', max_length=191)),
                ('mandate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='django_gocardless.Mandate')),
            ],
            bases=(models.Model, django_gocardless.mixins.GCCreateMixin),
        ),
        migrations.CreateModel(
            name='Payout',
            fields=[
                ('id', models.CharField(max_length=191, primary_key=True, serialize=False)),
                ('amount', models.PositiveIntegerField(null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('currency', models.CharField(blank=True, choices=[('EUR', 'Euro'), ('GBP', 'British Pound'), ('SEK', 'Swedish Krona')], max_length=3)),
                ('reference', models.CharField(blank=True, max_length=140)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid')], default='pending', max_length=191)),
                ('merchant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='django_gocardless.Merchant')),
            ],
            bases=(models.Model, django_gocardless.mixins.GCCacheMixin),
        ),
        migrations.CreateModel(
            name='RedirectFlow',
            fields=[
                ('id', models.CharField(max_length=191, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(null=True)),
                ('description', models.TextField(blank=True)),
                ('scheme', models.CharField(blank=True, choices=[('autogiro', 'Autogiro'), ('bacs', 'Bacs'), ('sepa_core', 'Sepa Core'), ('sepa_cor1', 'Sepa Cor1')], max_length=191, null=True)),
                ('session_token', models.CharField(blank=True, max_length=191)),
                ('redirect_url', models.URLField(blank=True, help_text='The URL of the hosted payment pages for this redirect flow. This is the URL you should redirect your customer to.')),
                ('completion_redirect_url', models.URLField(help_text='After completion of the RedirectFlow where to redirect the user to.', null=True)),
                ('customer', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_gocardless.Customer')),
                ('customer_bank_account', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_gocardless.CustomerBankAccount')),
                ('mandate', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_gocardless.Mandate')),
                ('merchant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_gocardless.Merchant')),
            ],
            bases=(models.Model, django_gocardless.mixins.GCCreateMixin),
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.CharField(max_length=191, primary_key=True, serialize=False)),
                ('amount', models.PositiveIntegerField(null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('currency', models.CharField(blank=True, choices=[('EUR', 'Euro'), ('GBP', 'British Pound'), ('SEK', 'Swedish Krona')], max_length=3)),
                ('reference', models.CharField(blank=True, max_length=140)),
                ('payment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='django_gocardless.Payment')),
            ],
            bases=(models.Model, django_gocardless.mixins.GCCacheMixin),
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.CharField(max_length=191, primary_key=True, serialize=False)),
                ('amount', models.PositiveIntegerField()),
                ('count', models.PositiveIntegerField(null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('currency', models.CharField(choices=[('EUR', 'Euro'), ('GBP', 'British Pound'), ('SEK', 'Swedish Krona')], max_length=3)),
                ('day_of_month', models.IntegerField(choices=[(-1, '-1'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, '23'), (24, '24'), (25, '25'), (26, '26'), (27, '27'), (28, '28')], null=True)),
                ('end_date', models.DateField(null=True)),
                ('interval', models.PositiveIntegerField(default=1)),
                ('interval_unit', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], max_length=191)),
                ('month', models.CharField(blank=True, choices=[('january', 'January'), ('february', 'February'), ('march', 'March'), ('april', 'April'), ('may', 'May'), ('june', 'June'), ('july', 'July'), ('august', 'August'), ('september', 'September'), ('october', 'October'), ('november', 'November'), ('december', 'December')], max_length=191)),
                ('name', models.CharField(blank=True, max_length=191)),
                ('payment_reference', models.CharField(blank=True, max_length=140)),
                ('start_date', models.DateField(null=True)),
                ('status', models.CharField(choices=[('pending_customer_approval', 'Pending customer approval'), ('customer_approval_denied', 'Customer approval denied'), ('active', 'Active'), ('finished', 'Finished'), ('cancelled', 'Cancelled')], default='pending_customer_approval', max_length=191)),
                ('mandate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_gocardless.Mandate')),
            ],
            bases=(models.Model, django_gocardless.mixins.GCCreateUpdateMixin),
        ),
        migrations.AddField(
            model_name='payment',
            name='payout',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='django_gocardless.Payout'),
        ),
        migrations.AddField(
            model_name='payment',
            name='subscription',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='django_gocardless.Subscription'),
        ),
        migrations.AddField(
            model_name='customer',
            name='merchant',
            field=models.ForeignKey(blank=True, help_text='Merchant if not a direct customer.', null=True, on_delete=django.db.models.deletion.CASCADE, to='django_gocardless.Merchant'),
        ),
    ]
